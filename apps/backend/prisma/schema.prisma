// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
}

model User {
  id           String      @id @default(uuid())
  username     String
  email        String      @unique
  password     String?
  role         Role        @default(USER)
  workspaces   Workspace[]
  refreshToken String?
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @updatedAt
}

model Workspace {
  id         String     @id @default(uuid())
  title      String
  boards     Board[]
  activities Activity[]
  user       User       @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId     String
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
}

model Board {
  id          String    @id @default(uuid())
  title       String
  color       Color
  workspace   Workspace @relation(fields: [workspaceId], references: [id], onDelete: Cascade)
  workspaceId String
  lists       List[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Activity {
  id          String    @id @default(uuid())
  title       String
  workspace   Workspace @relation(fields: [workspaceId], references: [id], onDelete: Cascade)
  workspaceId String
  createdAt   DateTime  @default(now())
}

model List {
  id        String   @id @default(uuid())
  title     String
  board     Board    @relation(fields: [boardId], references: [id], onDelete: Cascade)
  boardId   String
  cards     Card[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Card {
  id          String   @id @default(uuid())
  title       String
  description String
  priority    Priority
  list        List     @relation(fields: [listId], references: [id], onDelete: Cascade)
  listId      String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

enum Role {
  USER
  ADMIN
}

enum Priority {
  LOW
  MEDIUM
  HIGH
}

enum Color {
  RED
  GREEN
  BLUE
}
